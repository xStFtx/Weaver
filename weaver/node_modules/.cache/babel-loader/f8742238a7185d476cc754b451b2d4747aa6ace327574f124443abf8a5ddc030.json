{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\phili\\\\OneDrive\\\\Documents\\\\Coding]\\\\Web Dev\\\\Weather App\\\\weaver\\\\weaver\\\\src\\\\SearchPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Search() {\n  _s();\n  const [query, setQuery] = useState('');\n  const handleInputChange = event => {\n    setQuery(event.target.value);\n  };\n  const handleSearch = () => {\n    // Replace 'YOUR_API_KEY' with the actual API key you obtained from the weather API provider\n    const apiKey = '553816bd9e804a64a8481341230108';\n\n    // Replace 'https://api.weatherapi.com/v1/current.json' with the API endpoint provided by the weather API\n    const apiUrl = `https://api.weatherapi.com/v1/current.json?key=${apiKey}&q=${query}&aqi=no`;\n    axios.get(apiUrl).then(response => {\n      // Handle the API response here, update the state with the weather data\n      console.log('Weather data:', response.data);\n      // For example, you can set the weather data to a state variable to display it in the UI.\n      // setWeatherData(response.data);\n    }).catch(error => {\n      // Handle any errors that occurred during the API request\n      console.error('Error fetching weather data:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"Search-input\",\n      type: \"text\",\n      placeholder: \"Search for a place...\",\n      value: query,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      onClick: handleSearch,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(Search, \"qO/HZodsWTfJhuzZtdaxiosei2U=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Search","_s","query","setQuery","handleInputChange","event","target","value","handleSearch","apiKey","apiUrl","get","then","response","console","log","data","catch","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/phili/OneDrive/Documents/Coding]/Web Dev/Weather App/weaver/weaver/src/SearchPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './App.css';\r\n\r\nfunction Search() {\r\n  const [query, setQuery] = useState('');\r\n\r\n  const handleInputChange = (event) => {\r\n    setQuery(event.target.value);\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    // Replace 'YOUR_API_KEY' with the actual API key you obtained from the weather API provider\r\n    const apiKey = '553816bd9e804a64a8481341230108';\r\n  \r\n    // Replace 'https://api.weatherapi.com/v1/current.json' with the API endpoint provided by the weather API\r\n    const apiUrl = `https://api.weatherapi.com/v1/current.json?key=${apiKey}&q=${query}&aqi=no`;\r\n  \r\n    axios.get(apiUrl)\r\n      .then(response => {\r\n        // Handle the API response here, update the state with the weather data\r\n        console.log('Weather data:', response.data);\r\n        // For example, you can set the weather data to a state variable to display it in the UI.\r\n        // setWeatherData(response.data);\r\n      })\r\n      .catch(error => {\r\n        // Handle any errors that occurred during the API request\r\n        console.error('Error fetching weather data:', error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-container\">\r\n     <br />\r\n      <input\r\n        className=\"Search-input\"\r\n        type=\"text\"\r\n        placeholder=\"Search for a place...\"\r\n        value={query}\r\n        onChange={handleInputChange}\r\n      />\r\n      <br />\r\n      <br />\r\n      \r\n      <button className=\"button\" onClick={handleSearch}>Search</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMQ,iBAAiB,GAAIC,KAAK,IAAK;IACnCF,QAAQ,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC9B,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB;IACA,MAAMC,MAAM,GAAG,gCAAgC;;IAE/C;IACA,MAAMC,MAAM,GAAI,kDAAiDD,MAAO,MAAKP,KAAM,SAAQ;IAE3FL,KAAK,CAACc,GAAG,CAACD,MAAM,CAAC,CACdE,IAAI,CAACC,QAAQ,IAAI;MAChB;MACAC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,QAAQ,CAACG,IAAI,CAAC;MAC3C;MACA;IACF,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACd;MACAJ,OAAO,CAACI,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD,CAAC,CAAC;EACN,CAAC;EAED,oBACEnB,OAAA;IAAKoB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAChCrB,OAAA;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACLzB,OAAA;MACEoB,SAAS,EAAC,cAAc;MACxBM,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,uBAAuB;MACnCnB,KAAK,EAAEL,KAAM;MACbyB,QAAQ,EAAEvB;IAAkB;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,eACFzB,OAAA;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNzB,OAAA;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAENzB,OAAA;MAAQoB,SAAS,EAAC,QAAQ;MAACS,OAAO,EAAEpB,YAAa;MAAAY,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9D,CAAC;AAEV;AAACvB,EAAA,CA3CQD,MAAM;AAAA6B,EAAA,GAAN7B,MAAM;AA6Cf,eAAeA,MAAM;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}